#!/bin/bash
# openshift-iptables-port-proxy
#
### BEGIN INIT INFO
# Short-Description:  Script to apply the openshift port proxy iptables rules.
# Description: Script to apply the openshift port proxy iptables rules.
### END INIT INFO

RULES_FILE="/etc/openshift/iptables.filter.rules"

start() {
    ROUTE_LOCALNET=`sysctl -n net.ipv4.conf.all.route_localnet`
    if [ $ROUTE_LOCALNET -eq "0" ]; then
        echo "WARNING: net.ipv4.conf.all.route_localnet must be enabled." 1>&2
        sysctl -w net.ipv4.conf.all.route_localnet=1
        echo "WARNING: It has been temporarily enabled.  Please ensure this setting is persisted in /etc/sysctl.conf."
    fi

    if [ -f $RULES_FILE ]; then
      { echo "*filter"; cat $RULES_FILE; echo "COMMIT"; } | iptables-restore -n
    fi

    if [ -f /etc/openshift/iptables.nat.rules ]; then
      { echo "*nat"; cat /etc/openshift/iptables.nat.rules; echo "COMMIT"; } | iptables-restore -n
    fi
}

stop() {
    # Droping the reference from the input chain would needlessly complicate
    # this logic.  For that reason we can't actually drop the chain.  This will
    # allow admins to flush the chain if needed.
    iptables -F rhc-app-comm
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        if [ ! -f $RULES_FILE ]; then
            echo "ERROR: $RULES_FILE does not exist." 1>&2
            exit 1
        fi

        RULES_ASSERTED=`cat $RULES_FILE | grep ACCEPT | wc -l`
        RULES=`iptables -L rhc-app-comm | grep ACCEPT | wc -l`
        if [ $RULES_ASSERTED -eq $RULES ]; then
            echo "The OpenShift iptables port proxy is enabled."
            exit 0
        else
            echo "WARNING: A difference has been detected between state of $RULES_FILE and the rhc-app-comm iptables chain." 1>&2
            exit 1
        fi
        ;;
    restart)
        stop
        start
        ;;
    reload)
	# Calling stop could cause an outage.  It's best to simply call start.
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|reload}"
        exit 2
esac
