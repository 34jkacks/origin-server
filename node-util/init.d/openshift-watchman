#!/usr/bin/env oo-ruby
#
# openshift-watchman   This shell starts the oo-watchman daemon
#
# chkconfig:       345 89 11
# description:     Monitors OpenShift gears
# processname:     watchman
#

require 'rubygems'
require 'daemons'
require 'parseconfig'

raise 'Watchman must run as root' unless Process.euid == 0

# load any custom configuration elements for Watchman
path = "/etc/sysconfig/watchman"
if File.exists? path
  config = ParseConfig.new path
  config.get_params.each {|k| ENV[k] = config[k]}
end

Options = {
    app_name:   'watchman',
    backtrace:  true,
    ontop:      false,
    log_output: true,
    dir_mode:   :system,
    log_dir:    '/var/log/openshift/node',
    multiple:   false,
    script:     '/usr/sbin/oo-watchman',
}

def daemon_running?
  group = Daemons::ApplicationGroup.new(::Options[:app_name], ::Options).tap { |g| g.setup }
  (!group.applications.empty? || (group.applications.first && group.applications.running?))
end

case ARGV[0]
  when 'stop'
    puts 'Stopping Watchman'
    Daemons.run(Options[:script], Options)
  when 'start'
    puts 'Starting Watchman'
    Daemons.run(Options[:script], Options)
  when 'restart'
    # 'restart' code can be removed when we upgrade beyond Daemons 1.1.0
    loop do
      puts 'Stopping Watchman'
      Daemons.run(Options[:script], Options.merge(ARGV: ['stop']))
      break unless daemon_running?
      sleep 1
    end

    puts 'Starting Watchman'
    Daemons.run(Options[:script], Options.merge(ARGV: ['start']))
  when 'status'
    if daemon_running?
      puts 'Watchman is running'
      exit 0
    else
      puts 'Watchman is not running'
      exit 1
    end
  else
    Daemons.run(Options[:script], Options)
end
